LambdaRegisterSmallAreas:
    Type: "AWS::Serverless::Function"
    Properties:
        CodeUri: "./lambda_functions/register_small_areas/"
        FunctionName: !If
            - "IsProd"
            - "RestaurantsRegisterSmallAreasProd"
            - "RestaurantsRegisterSmallAreasDev"
        Role: !GetAtt "IamRoleRegisterSmallAreas.Arn"
        Runtime: "python3.12"
        Layers:
            - !Ref "LambdaLayerDynamodbTypes"
            - !Ref "LambdaLayerDsArea"
        Environment:
            Variables:
                ARN_LAMBDA_ERROR_COMMON: !GetAtt "LambdaErrorCommon.Arn"
                ARN_LAMBDA_HANDLER_SCHEDULES: !Ref "LambdaHandlerSchedules"
                ARN_LAMBDA_REGISTER_PAGES: !GetAtt "LambdaRegisterPages.Arn"
                ARN_IAM_ROLE_INVOKE_REGISTER_PAGES: !GetAtt "IamRoleInvokeRegisterPages.Arn"
                NAME_SCHEDULE_GROUP: !Ref "EventBridgeScheduleGroup"
                NAME_DYNAMODB_TABLE_TASKS: !Ref "DynamodbRestaurantsTasks"
                NAME_TASK_REGISTER_PAGES: !Ref "TaskNameRegisterPages"
        Handler: "app.lambda_handler"
        Architectures:
            - "arm64"
        Timeout: 30

        Events:
            EventBridgeScheduleLambdaRegisterSmallAreas:
                Type: "ScheduleV2"
                Properties:
                    ScheduleExpression: cron(0 0 ? * SUN *)
                    ScheduleExpressionTimezone: "Asia/Tokyo"
                    State: ENABLED
                    GroupName: !Ref "EventBridgeScheduleGroup"
                    Name: !If
                        - "IsProd"
                        - "RegisterSmallAreasProd"
                        - "RegisterSmallAreasDev"
                    RoleArn: !GetAtt "IamRoleInvokeRegisterSmallAreas.Arn"
                    Input: '{"middle_area_code": "Y883"}'